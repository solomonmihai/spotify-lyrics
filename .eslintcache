[{"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/App.tsx":"1","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/index.tsx":"2","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/RedirectPage.tsx":"3","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/DashboardPage.tsx":"4","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/LandingPage.tsx":"5","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Stores/AuthStore.ts":"6","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/Header.tsx":"7","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/SongCard.tsx":"8","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/Lyrics.tsx":"9","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/SettingsMenu.tsx":"10","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Stores/SettingsStore.ts":"11","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/LyricsText.tsx":"12","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Utils/LyricsFetch.ts":"13","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Stores/SongStore.ts":"14"},{"size":1317,"mtime":1614887165890,"results":"15","hashOfConfig":"16"},{"size":273,"mtime":1612113910583,"results":"17","hashOfConfig":"16"},{"size":890,"mtime":1614886108373,"results":"18","hashOfConfig":"16"},{"size":1934,"mtime":1614925981278,"results":"19","hashOfConfig":"16"},{"size":1786,"mtime":1614884946899,"results":"20","hashOfConfig":"16"},{"size":152,"mtime":1614887127880,"results":"21","hashOfConfig":"16"},{"size":1235,"mtime":1614886486322,"results":"22","hashOfConfig":"16"},{"size":835,"mtime":1612365887423,"results":"23","hashOfConfig":"16"},{"size":2236,"mtime":1614705853465,"results":"24","hashOfConfig":"16"},{"size":4769,"mtime":1614543859137,"results":"25","hashOfConfig":"16"},{"size":324,"mtime":1612353556781,"results":"26","hashOfConfig":"16"},{"size":1224,"mtime":1614703832424,"results":"27","hashOfConfig":"16"},{"size":2611,"mtime":1614887505789,"results":"28","hashOfConfig":"16"},{"size":153,"mtime":1612168260789,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xbkctk",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/App.tsx",[],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/index.tsx",[],["60","61"],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/RedirectPage.tsx",[],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/DashboardPage.tsx",["62","63"],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/LandingPage.tsx",["64","65"],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Stores/AuthStore.ts",[],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/Header.tsx",["66"],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/SongCard.tsx",[],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/Lyrics.tsx",["67"],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/SettingsMenu.tsx",["68","69","70","71","72","73"],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Stores/SettingsStore.ts",[],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/LyricsText.tsx",["74","75"],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Utils/LyricsFetch.ts",["76","77"],"import axios from \"axios\";\n\nconst corsUrl = \"https://cors-anywhere-mihai.herokuapp.com/\";\nconst searchUrl = \"http://music.163.com/api/search/pc?offset=0&limit=1&type=1&s=\";\nconst lyricsUrl = \"https://music.163.com/api/song/lyric?os=pc&lv=-1&kv=-1&tv=-1&id=\";\n\nasync function getSongId(song: string, artist: string) {\n  const url = `${corsUrl}${searchUrl}${song} ${artist}`;\n\n  const res = await axios.get(url);\n  const firstSong = res.data.result.songs[0];\n\n  return firstSong.id;\n}\n\nfunction parseTime(timeString: string): number {\n  timeString = timeString.replace(\".\", \":\");\n  const arr = timeString.split(\":\").map((x) => +x);\n  const time = +arr[2] + 1000 * (+arr[1] + 60 * +arr[0]);\n  return time;\n}\n\n// TODO: check Arctic Monkeys - Arabella LRC\n\nfunction parseLrc(lrc: string) {\n  const lyrics = [];\n  const arr = lrc.split(/\\r\\n|\\r|\\n/);\n  for (let i = 0; i < arr.length; i++) {\n    const verse = arr[i];\n    if (verse == \"\") {\n      arr.splice(i, 1);\n    } else {\n      const timeString = verse.match(/\\[(.*?)\\]/)![1];\n      const lyric = verse.split(\"]\")[1];\n\n      // TODO: remove lyrics that have chinese\n      if (lyric == \"\") {\n        continue;\n      } else {\n        lyrics.push({\n          time: parseTime(timeString),\n          lyric: lyric,\n        });\n      }\n    }\n  }\n  return lyrics;\n}\n\n// provide args as encoded uri components\n// TODO: also check if lyrics exist\nexport default async function fetchLyrics(song: string, artist: string) {\n  const songId = await getSongId(song, artist);\n  const url = `${corsUrl}${lyricsUrl}${songId}`;\n  return axios.get(url).then((res) => {\n    const lrc = res.data.lrc.lyric;\n    const lyrics = parseLrc(lrc);\n    return lyrics;\n  });\n}\n\n// function getLyricsOvh(artist: string, song: string) {\n// const url = `https://api.lyrics.ovh/v1/${artist}/${song}`;\n\n// axios\n// .get(url, {\n// timeout: 10000,\n// })\n// .then((res) => {\n// const lyricsArr: [] = res.data.lyrics.split(/\\r\\n|\\r|\\n/);\n// for (let i = 0; i < lyricsArr.length; i++) {\n// if (lyricsArr[i] == \"\") {\n// lyricsArr.splice(i, 1);\n// }\n// }\n// setLyrics(lyricsArr);\n// setLyricsSrc(LyricsSrc.ovh);\n// setLoaded(true);\n// })\n// .catch((err) => {\n// console.log(\"Ovh lyrics err: \", err);\n// setNotFound(true);\n// });\n// }\n\n// function getLyricsTextyl(artist: string, song: string) {\n// const url = `${corsurl}https://api.textyl.co/api/lyrics?q=${song} ${artist}`;\n\n// axios\n// .get(url)\n// .then((res) => {\n// setLyrics(res.data);\n// setLyricsSrc(LyricsSrc.textyl);\n// setLoaded(true);\n// })\n// .catch((err) => {\n// console.log(\"Textyl err: \", err);\n// getLyricsOvh(artist, song);\n// });\n// }\n","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Stores/SongStore.ts",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":45,"column":6,"nodeType":"84","endLine":45,"endColumn":8,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":56,"column":18,"nodeType":"88","messageId":"89","endLine":56,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":13},{"ruleId":"90","severity":1,"message":"94","line":2,"column":26,"nodeType":"92","messageId":"93","endLine":2,"endColumn":30},{"ruleId":"82","severity":1,"message":"95","line":29,"column":6,"nodeType":"84","endLine":29,"endColumn":13,"suggestions":"96"},{"ruleId":"90","severity":1,"message":"97","line":19,"column":20,"nodeType":"92","messageId":"93","endLine":19,"endColumn":31},{"ruleId":"90","severity":1,"message":"98","line":81,"column":26,"nodeType":"92","messageId":"93","endLine":81,"endColumn":27},{"ruleId":"86","severity":1,"message":"87","line":103,"column":29,"nodeType":"88","messageId":"89","endLine":103,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":143,"column":38,"nodeType":"88","messageId":"89","endLine":143,"endColumn":40},{"ruleId":"86","severity":1,"message":"87","line":152,"column":44,"nodeType":"88","messageId":"89","endLine":152,"endColumn":46},{"ruleId":"86","severity":1,"message":"87","line":155,"column":53,"nodeType":"88","messageId":"89","endLine":155,"endColumn":55},{"ruleId":"86","severity":1,"message":"87","line":159,"column":39,"nodeType":"88","messageId":"89","endLine":159,"endColumn":41},{"ruleId":"86","severity":1,"message":"87","line":20,"column":21,"nodeType":"88","messageId":"89","endLine":20,"endColumn":23},{"ruleId":"86","severity":1,"message":"87","line":39,"column":24,"nodeType":"88","messageId":"89","endLine":39,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":30,"column":15,"nodeType":"88","messageId":"89","endLine":30,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":37,"column":17,"nodeType":"88","messageId":"89","endLine":37,"endColumn":19},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSongData'. Either include it or remove the dependency array.","ArrayExpression",["101"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Text' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["102"],"'setNotFound' is assigned a value but never used.","'_' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [getSongData]",{"range":"107","text":"108"},"Update the dependencies array to be: [getUserData, token]",{"range":"109","text":"110"},[1202,1204],"[getSongData]",[814,821],"[getUserData, token]"]